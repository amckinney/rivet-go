// This file was auto-generated by Fern from our API Definition.

package chat

import (
	uuid "github.com/gofrs/uuid/v5"
	rivetgo "github.com/rivet-gg/rivet-go"
	time "time"
)

type GetThreadHistoryResponse struct {
	// Ordered old to new.
	// If querying `rivet.api.chat.common#before_and_after`, this will be
	// `count * 2` long.
	ChatMessages []*Message `json:"chat_messages,omitempty"`
}

type GetThreadTopicResponse struct {
	Topic *SimpleTopic `json:"topic,omitempty"`
}

type SendMessageRequest struct {
	Topic       *SendTopic       `json:"topic,omitempty"`
	MessageBody *SendMessageBody `json:"message_body,omitempty"`
}

type SendMessageResponse struct {
	ChatMessageId uuid.UUID `json:"chat_message_id"`
}

type SetThreadReadRequest struct {
	// Any messages newer than this timestamp will be marked as unread.
	// This should be the current timestamp (in milliseconds).
	LastReadTs time.Time `json:"last_read_ts"`
}

type SetTypingStatusRequest struct {
	Status *TypingStatus `json:"status,omitempty"`
}

type WatchThreadResponse struct {
	// All messages new messages posted to this thread. Ordered
	// old to new.
	ChatMessages []*Message `json:"chat_messages,omitempty"`
	// All identities that are currently typing in this thread.
	TypingStatuses []*IdentityTypingStatus `json:"typing_statuses,omitempty"`
	Watch          *rivetgo.WatchResponse  `json:"watch,omitempty"`
}
